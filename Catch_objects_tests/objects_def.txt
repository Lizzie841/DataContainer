object{
	name{thingy}
	storage_type{compactable}
	size{1200}
	
	hook{create}
	hook{delete}
	hook{move}
	
	property{
		name{some_value}
		type{int32_t}
	}

	property{
		name{bf_value}
		type{bitfield}
	}

	property{
		name{d_value}
		type{derived{int32_t}}
		hook{get}
	}

	property{
		name{dbf_value}
		type{derived{bitfield}}
		hook{set}
	}

	property{
		name{obj_value}
		type{object{std::vector<float>}}
	}

	property{
		name{pooled_v}
		type{vector_pool{1000}{int16_t}}
	}

	property{
		name{big_array}
		type{array{int32_t}{float}}
	}

	property{
		name{big_array_alt}
		type{array{int32_t}{float}}
	}

	swappable{big_array}{big_array_alt}

	property{
		name{big_array_bf}
		type{array{int32_t}{bitfield}}
	}
}

object{
	name{thingy2}
	storage_type{compactable}
	size{expandable}
	
	property{
		name{some_value}
		type{int32_t}
	}

	property{
		name{bf_value}
		type{bitfield}
	}

	property{
		name{d_value}
		type{derived{int32_t}}
	}

	property{
		name{dbf_value}
		type{derived{bitfield}}
	}

	property{
		name{obj_value}
		type{object{std::vector<float>}}
	}

	property{
		name{pooled_v}
		type{vector_pool{1000}{int16_t}}
	}

	property{
		name{big_array}
		type{array{int32_t}{float}}
	}

	property{
		name{big_array_bf}
		type{array{int32_t}{bitfield}}
	}
}

relationship{
	name{dummy_rel}

	link{
		object{thingy}
		name{left}
		type{unique}
	}
	link{
		object{thingy2}
		name{right}
		type{unique}
	}
}

object{
	name{oop_thingy}
	storage_type{compactable}
	size{1200}
	
	property{
		protected
		name{pstruct}
		type{my_struct}
	}

	property{
		private
		name{pfloat}
		type{float}
	}

	function{void @reset_internal()}
	const_function{int @get_a_value(float @offset)}
}

relationship{
	name{dummy_rel_B}

	link{
		object{oop_thingy}
		name{left}
		type{unique}
	}
	link{
		object{oop_thingy}
		name{right}
		type{unique}
	}
}

global{int32_t counter = 0;}